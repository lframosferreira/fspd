# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import stock_control_pb2 as stock__control__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in stock_control_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StockControlStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add_product = channel.unary_unary(
                '/stock_control.StockControl/add_product',
                request_serializer=stock__control__pb2.RequestAddProduct.SerializeToString,
                response_deserializer=stock__control__pb2.ResponseAddProduct.FromString,
                _registered_method=True)
        self.change_product_amount = channel.unary_unary(
                '/stock_control.StockControl/change_product_amount',
                request_serializer=stock__control__pb2.RequestChangeProductAmount.SerializeToString,
                response_deserializer=stock__control__pb2.ResponseChangeProductAmount.FromString,
                _registered_method=True)
        self.list_products = channel.unary_unary(
                '/stock_control.StockControl/list_products',
                request_serializer=stock__control__pb2.RequestListProducts.SerializeToString,
                response_deserializer=stock__control__pb2.ResponseListProducts.FromString,
                _registered_method=True)
        self.finish_execution = channel.unary_unary(
                '/stock_control.StockControl/finish_execution',
                request_serializer=stock__control__pb2.RequestFinishExecution.SerializeToString,
                response_deserializer=stock__control__pb2.ResponseFinishExecution.FromString,
                _registered_method=True)


class StockControlServicer(object):
    """Missing associated documentation comment in .proto file."""

    def add_product(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def change_product_amount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_products(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def finish_execution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StockControlServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add_product': grpc.unary_unary_rpc_method_handler(
                    servicer.add_product,
                    request_deserializer=stock__control__pb2.RequestAddProduct.FromString,
                    response_serializer=stock__control__pb2.ResponseAddProduct.SerializeToString,
            ),
            'change_product_amount': grpc.unary_unary_rpc_method_handler(
                    servicer.change_product_amount,
                    request_deserializer=stock__control__pb2.RequestChangeProductAmount.FromString,
                    response_serializer=stock__control__pb2.ResponseChangeProductAmount.SerializeToString,
            ),
            'list_products': grpc.unary_unary_rpc_method_handler(
                    servicer.list_products,
                    request_deserializer=stock__control__pb2.RequestListProducts.FromString,
                    response_serializer=stock__control__pb2.ResponseListProducts.SerializeToString,
            ),
            'finish_execution': grpc.unary_unary_rpc_method_handler(
                    servicer.finish_execution,
                    request_deserializer=stock__control__pb2.RequestFinishExecution.FromString,
                    response_serializer=stock__control__pb2.ResponseFinishExecution.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stock_control.StockControl', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('stock_control.StockControl', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StockControl(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def add_product(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/stock_control.StockControl/add_product',
            stock__control__pb2.RequestAddProduct.SerializeToString,
            stock__control__pb2.ResponseAddProduct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def change_product_amount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/stock_control.StockControl/change_product_amount',
            stock__control__pb2.RequestChangeProductAmount.SerializeToString,
            stock__control__pb2.ResponseChangeProductAmount.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def list_products(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/stock_control.StockControl/list_products',
            stock__control__pb2.RequestListProducts.SerializeToString,
            stock__control__pb2.ResponseListProducts.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def finish_execution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/stock_control.StockControl/finish_execution',
            stock__control__pb2.RequestFinishExecution.SerializeToString,
            stock__control__pb2.ResponseFinishExecution.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
